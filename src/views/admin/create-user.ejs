<section class="py-5">
    <div class="container px-5 my-5">
        <div class="row gx-5">
            <div class="col-lg-12 mb-4">
                <h2 class="fw-bolder">Create New User</h2>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/blogs">Home</a></li>
                        <li class="breadcrumb-item"><a href="/admin/users">User Management</a></li>
                        <li class="breadcrumb-item active">Create User</li>
                    </ol>
                </nav>
            </div>

            <div class="col-lg-8">
                <form action="/admin/users" method="POST">
                    <div class="card shadow-sm">
                        <div class="card-header">
                            <h5 class="mb-0">User Information</h5>
                        </div>
                        <div class="card-body">
                            <!-- Error Message -->
                            <% if (typeof error !== 'undefined') { %>
                                <div class="alert alert-danger">
                                    <%= error %>
                                </div>
                            <% } %>

                            <div class="mb-3">
                                <label for="username" class="form-label">Username <span class="text-danger">*</span></label>
                                <input type="text" name="username" class="form-control" id="username" 
                                       value="<%= typeof formData !== 'undefined' ? formData.username || '' : '' %>" 
                                       required>
                                <div class="form-text">Username must be unique and contain only letters, numbers, and underscores.</div>
                            </div>

                            <div class="mb-3">
                                <label for="email" class="form-label">Email Address <span class="text-danger">*</span></label>
                                <input type="email" name="email" class="form-control" id="email" 
                                       value="<%= typeof formData !== 'undefined' ? formData.email || '' : '' %>" 
                                       required>
                                <div class="form-text">Email must be unique and valid.</div>
                            </div>

                            <div class="mb-3">
                                <label for="password" class="form-label">Password <span class="text-danger">*</span></label>
                                <input type="password" name="password" class="form-control" id="password" required>
                                <div class="form-text">Password must be at least 6 characters long.</div>
                            </div>

                            <div class="mb-3">
                                <label for="confirmPassword" class="form-label">Confirm Password <span class="text-danger">*</span></label>
                                <input type="password" name="confirmPassword" class="form-control" id="confirmPassword" required>
                                <div class="invalid-feedback">
                                    Passwords do not match.
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="isAdmin" class="form-label">User Role</label>
                                <select class="form-select" name="isAdmin" id="isAdmin">
                                    <option value="false" selected>Regular User</option>
                                    <option value="true">Administrator</option>
                                </select>
                                <div class="form-text">
                                    <strong>Warning:</strong> Administrators have full access to all system features including user management.
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between">
                                <a href="/admin/users" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-left"></i> Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-person-plus"></i> Create User
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            
            <div class="col-lg-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">User Creation Guidelines</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled mb-0">
                            <li class="mb-2">
                                <i class="bi bi-check-circle text-success me-2"></i>
                                Use strong, unique passwords
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-circle text-success me-2"></i>
                                Verify email addresses are correct
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-circle text-success me-2"></i>
                                Choose appropriate user roles
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-check-circle text-success me-2"></i>
                                Usernames should be professional
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0">Role Differences</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <h6 class="text-primary">Regular User</h6>
                            <ul class="small mb-0">
                                <li>Can create and manage own blogs</li>
                                <li>Can view all public blogs</li>
                                <li>Limited to personal dashboard</li>
                            </ul>
                        </div>
                        <div>
                            <h6 class="text-danger">Administrator</h6>
                            <ul class="small mb-0">
                                <li>Full system access</li>
                                <li>Can manage all users</li>
                                <li>Can manage categories</li>
                                <li>Can manage all blogs</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const passwordField = document.getElementById('password');
    const confirmPasswordField = document.getElementById('confirmPassword');
    const form = document.querySelector('form');

    // Password confirmation validation
    function validatePasswordMatch() {
        const password = passwordField.value;
        const confirmPassword = confirmPasswordField.value;
        
        if (confirmPassword && password !== confirmPassword) {
            confirmPasswordField.setCustomValidity('Passwords do not match');
            confirmPasswordField.classList.add('is-invalid');
        } else {
            confirmPasswordField.setCustomValidity('');
            confirmPasswordField.classList.remove('is-invalid');
        }
    }

    confirmPasswordField.addEventListener('input', validatePasswordMatch);
    passwordField.addEventListener('input', validatePasswordMatch);

    // Form validation
    form.addEventListener('submit', function(event) {
        validatePasswordMatch();
        
        if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
        }
        
        form.classList.add('was-validated');
    });

    // Password strength indicator
    passwordField.addEventListener('input', function() {
        const password = this.value;
        const strength = getPasswordStrength(password);
        showPasswordStrength(strength);
    });

    function getPasswordStrength(password) {
        let score = 0;
        if (password.length >= 8) score++;
        if (/[a-z]/.test(password)) score++;
        if (/[A-Z]/.test(password)) score++;
        if (/[0-9]/.test(password)) score++;
        if (/[^A-Za-z0-9]/.test(password)) score++;
        return score;
    }

    function showPasswordStrength(strength) {
        const strengthTexts = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
        const strengthColors = ['danger', 'warning', 'warning', 'info', 'success'];
        
        let strengthIndicator = document.getElementById('password-strength');
        if (!strengthIndicator) {
            strengthIndicator = document.createElement('div');
            strengthIndicator.id = 'password-strength';
            strengthIndicator.className = 'form-text';
            passwordField.parentNode.appendChild(strengthIndicator);
        }
        
        if (passwordField.value.length > 0) {
            strengthIndicator.innerHTML = `Password strength: <span class="text-${strengthColors[strength]}">${strengthTexts[strength]}</span>`;
        } else {
            strengthIndicator.innerHTML = '';
        }
    }
});
</script>